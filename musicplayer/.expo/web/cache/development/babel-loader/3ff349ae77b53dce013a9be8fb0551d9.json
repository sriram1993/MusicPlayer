{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { MusicContext } from \"../utilities/store\";\nimport Entypo from \"@expo/vector-icons/Entypo\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar PlaylistsScreen = function PlaylistsScreen(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var storeData = useContext(MusicContext);\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    playlists = _useState2[0],\n    setPlayLists = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    modalVisible = _useState4[0],\n    setModalVisible = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    inputValue = _useState6[0],\n    setInputValue = _useState6[1];\n  useEffect(function () {\n    if (storeData.state.playlists.length !== 0) setPlayLists(storeData.state.playlists);else setPlayLists(null);\n  }, [storeData.state.playlists]);\n  var showAlert = function showAlert(message) {\n    if (Platform.OS === 'web') {\n      window.alert(message);\n    } else {\n      Alert.alert(message);\n    }\n  };\n  var playlistHandler = function () {\n    var _ref2 = _asyncToGenerator(function* (item) {});\n    return function playlistHandler(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var createPlaylist = function () {\n    var _ref3 = _asyncToGenerator(function* () {});\n    return function createPlaylist() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var deletePlaylist = function () {\n    var _ref4 = _asyncToGenerator(function* (item) {});\n    return function deletePlaylist(_x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var renderModal = function renderModal() {\n    return _jsx(Modal, {\n      visible: modalVisible,\n      onRequestClose: function onRequestClose() {\n        return setModalVisible(false);\n      }\n    });\n  };\n  var renderItem = function renderItem(_ref5) {\n    var item = _ref5.item;\n    return null;\n  };\n  if (playlists === null) {\n    return _jsx(SafeAreaView, {\n      style: styles.container,\n      children: _jsx(Text, {\n        style: styles.emptyText,\n        children: \" No playlists created yet! \"\n      })\n    });\n  }\n  return _jsx(SafeAreaView, {\n    style: styles.container\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"column\",\n    backgroundColor: '#f1f2ff',\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  emptyText: {\n    color: \"black\",\n    fontSize: 35,\n    fontWeight: '400',\n    fontFamily: 'Roboto'\n  }\n});\nexport default PlaylistsScreen;","map":{"version":3,"names":["React","useState","useContext","useEffect","SafeAreaView","View","Text","TouchableWithoutFeedback","TouchableOpacity","FlatList","Modal","TextInput","Platform","Alert","StyleSheet","MusicContext","Entypo","jsx","_jsx","PlaylistsScreen","_ref","route","navigation","storeData","_useState","_useState2","_slicedToArray","playlists","setPlayLists","_useState3","_useState4","modalVisible","setModalVisible","_useState5","_useState6","inputValue","setInputValue","state","length","showAlert","message","OS","window","alert","playlistHandler","_ref2","_asyncToGenerator","item","_x","apply","arguments","createPlaylist","_ref3","deletePlaylist","_ref4","_x2","renderModal","visible","onRequestClose","renderItem","_ref5","style","styles","container","children","emptyText","create","flex","flexDirection","backgroundColor","alignItems","justifyContent","color","fontSize","fontWeight","fontFamily"],"sources":["/usercode/musicplayer/components/PlaylistsScreen.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { \n  SafeAreaView,\n  View,\n  Text,\n  TouchableWithoutFeedback,\n  TouchableOpacity,\n  FlatList,\n  Modal,\n  TextInput,\n  Platform,\n  Alert,\n  StyleSheet\n} from 'react-native';\nimport { MusicContext } from '../utilities/store';\nimport Entypo from 'react-native-vector-icons/Entypo';\n\nconst PlaylistsScreen = ({ route, navigation }) => {\n\n  /*\n  storeData => current state of the initial state defined within useReducer (/utilities/store.js)\n  playlists => list of objects in the format [{name: playlistName, tracks: [playlistTrackObjects]}]\n  modalVisible => state to keep track of whether to show the modal view or not\n  inputValue => state to keep track of the current input value of TextInput component\n  */\n  const storeData = useContext(MusicContext);\n  const [playlists, setPlayLists] = useState(null);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [inputValue, setInputValue] = useState('');\n\n  // Rerender component every time playlists within the useReducer store changes (utilities/store.js)\n  useEffect(() => {\n    if (storeData.state.playlists.length !== 0)\n      setPlayLists(storeData.state.playlists);\n    else\n      setPlayLists(null);\n  }, [storeData.state.playlists]);\n\n  const showAlert = (message) => {\n    if (Platform.OS === 'web') {\n      window.alert(message);\n    } else {\n      Alert.alert(message);\n    }\n  };\n\n  const playlistHandler = async (item) => {\n    \n  }\n\n  const createPlaylist = async () => {\n    \n  };\n\n  const deletePlaylist = async (item) => {\n    \n  }\n\n  const renderModal = () => {\n    return (\n      <Modal visible={modalVisible} onRequestClose={() => setModalVisible(false)}>\n        \n      </Modal>\n    );\n  }\n\n  const renderItem = ({ item }) => {\n    return (\n      null\n    );\n  }\n\n  if (playlists === null) {\n    return (\n      <SafeAreaView style={styles.container}>\n        <Text style={styles.emptyText}> No playlists created yet! </Text>\n      </SafeAreaView>\n    );\n  }\n  return (\n    <SafeAreaView style={styles.container}>\n\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"column\",\n    backgroundColor: '#f1f2ff',\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  emptyText: {\n    color: \"black\",\n    fontSize: 35,\n    fontWeight: '400',\n    fontFamily: 'Roboto'\n  },\n});\n\nexport default PlaylistsScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module"}