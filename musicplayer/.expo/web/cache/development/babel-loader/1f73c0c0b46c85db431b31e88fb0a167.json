{"ast":null,"code":"import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport LandingScreen from \"../components/LandingScreen\";\nimport TracksScreen from \"../components/TracksScreen\";\nimport FavoritesScreen from \"../components/FavoritesScreen\";\nimport PlaylistsScreen from \"../components/PlaylistsScreen\";\nimport PlaylistsHelper from \"../components/PlaylistsHelper\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar StackNavigator = function StackNavigator() {\n  var _options = function options(title) {\n    return {\n      headerTitle: title,\n      headerTitleAlign: \"center\",\n      headerTitleStyle: {\n        fontSize: 30,\n        fontWeight: \"700\",\n        fontFamily: 'Roboto',\n        color: \"black\"\n      },\n      headerStyle: {\n        backgroundColor: \"#f1f2ff\"\n      }\n    };\n  };\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"landing\",\n        component: LandingScreen,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"tracks\",\n        component: TracksScreen,\n        options: function options() {\n          return _options('Tracks');\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"favorites\",\n        component: FavoritesScreen,\n        options: function options() {\n          return _options('Favorites');\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"playlists\",\n        component: PlaylistsScreen,\n        options: function options() {\n          return _options('Playlists');\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"playlistshelper\",\n        component: PlaylistsHelper,\n        options: function options() {\n          return _options('My Playlist');\n        }\n      })]\n    })\n  });\n};\nexport default StackNavigator;","map":{"version":3,"names":["React","NavigationContainer","createNativeStackNavigator","LandingScreen","TracksScreen","FavoritesScreen","PlaylistsScreen","PlaylistsHelper","jsx","_jsx","jsxs","_jsxs","Stack","StackNavigator","options","title","headerTitle","headerTitleAlign","headerTitleStyle","fontSize","fontWeight","fontFamily","color","headerStyle","backgroundColor","children","Navigator","Screen","name","component","headerShown"],"sources":["/usercode/musicplayer/components/StackNavigator.js"],"sourcesContent":["import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport LandingScreen from '../components/LandingScreen';\nimport TracksScreen from '../components/TracksScreen';\nimport FavoritesScreen from '../components/FavoritesScreen';\nimport PlaylistsScreen from '../components/PlaylistsScreen';\nimport PlaylistsHelper from '../components/PlaylistsHelper';\n\nconst Stack = createNativeStackNavigator();\n\nconst StackNavigator = () => {\n\n  const options = (title) => {\n    return {\n      headerTitle: title,\n      headerTitleAlign: \"center\",\n      headerTitleStyle: {fontSize: 30, fontWeight: \"700\", fontFamily: 'Roboto', color: \"black\"},\n      headerStyle: {backgroundColor: \"#f1f2ff\"}\n    };\n  }\n\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen\n          name=\"landing\"\n          component={LandingScreen}\n          options={{headerShown: false}}\n        />\n        <Stack.Screen\n          name=\"tracks\"\n          component={TracksScreen}\n          options={() => options('Tracks')}\n        />\n        <Stack.Screen\n          name=\"favorites\"\n          component={FavoritesScreen}\n          options={() => options('Favorites')}\n        />\n        <Stack.Screen\n          name=\"playlists\"\n          component={PlaylistsScreen}\n          options={() => options('Playlists')}\n        />\n        <Stack.Screen\n          name=\"playlistshelper\"\n          component={PlaylistsHelper}\n          options={() => options('My Playlist')}\n        />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n};\n\nexport default StackNavigator;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,OAAOC,aAAa;AACpB,OAAOC,YAAY;AACnB,OAAOC,eAAe;AACtB,OAAOC,eAAe;AACtB,OAAOC,eAAe;AAAsC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE5D,IAAMC,KAAK,GAAGV,0BAA0B,CAAC,CAAC;AAE1C,IAAMW,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;EAE3B,IAAMC,QAAO,GAAG,SAAVA,OAAOA,CAAIC,KAAK,EAAK;IACzB,OAAO;MACLC,WAAW,EAAED,KAAK;MAClBE,gBAAgB,EAAE,QAAQ;MAC1BC,gBAAgB,EAAE;QAACC,QAAQ,EAAE,EAAE;QAAEC,UAAU,EAAE,KAAK;QAAEC,UAAU,EAAE,QAAQ;QAAEC,KAAK,EAAE;MAAO,CAAC;MACzFC,WAAW,EAAE;QAACC,eAAe,EAAE;MAAS;IAC1C,CAAC;EACH,CAAC;EAED,OACEf,IAAA,CAACR,mBAAmB;IAAAwB,QAAA,EAClBd,KAAA,CAACC,KAAK,CAACc,SAAS;MAAAD,QAAA,GACdhB,IAAA,CAACG,KAAK,CAACe,MAAM;QACXC,IAAI,EAAC,SAAS;QACdC,SAAS,EAAE1B,aAAc;QACzBW,OAAO,EAAE;UAACgB,WAAW,EAAE;QAAK;MAAE,CAC/B,CAAC,EACFrB,IAAA,CAACG,KAAK,CAACe,MAAM;QACXC,IAAI,EAAC,QAAQ;QACbC,SAAS,EAAEzB,YAAa;QACxBU,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMA,QAAO,CAAC,QAAQ,CAAC;QAAA;MAAC,CAClC,CAAC,EACFL,IAAA,CAACG,KAAK,CAACe,MAAM;QACXC,IAAI,EAAC,WAAW;QAChBC,SAAS,EAAExB,eAAgB;QAC3BS,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMA,QAAO,CAAC,WAAW,CAAC;QAAA;MAAC,CACrC,CAAC,EACFL,IAAA,CAACG,KAAK,CAACe,MAAM;QACXC,IAAI,EAAC,WAAW;QAChBC,SAAS,EAAEvB,eAAgB;QAC3BQ,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMA,QAAO,CAAC,WAAW,CAAC;QAAA;MAAC,CACrC,CAAC,EACFL,IAAA,CAACG,KAAK,CAACe,MAAM;QACXC,IAAI,EAAC,iBAAiB;QACtBC,SAAS,EAAEtB,eAAgB;QAC3BO,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMA,QAAO,CAAC,aAAa,CAAC;QAAA;MAAC,CACvC,CAAC;IAAA,CACa;EAAC,CACC,CAAC;AAE1B,CAAC;AAED,eAAeD,cAAc"},"metadata":{},"sourceType":"module"}